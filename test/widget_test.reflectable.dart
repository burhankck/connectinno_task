// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
import 'dart:core';
import 'package:connectinno_task/core/global/reflector.dart' as prefix0;
import 'package:connectinno_task/features/home/model/delete_response_model.dart'
    as prefix3;
import 'package:connectinno_task/features/home/model/notes_list_model.dart'
    as prefix1;
import 'package:connectinno_task/features/notes_add/model/notes_add_request_model.dart'
    as prefix2;
import 'package:connectinno_task/features/notes_add/model/notes_add_response_model.dart'
    as prefix4;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: unused_import
// ignore_for_file: sdk_version_since

import 'package:reflectable/mirrors.dart' as m;
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
    <m.TypeMirror>[
      r.NonGenericClassMirrorImpl(
        r'NotesListModel',
        r'.NotesListModel',
        134217735,
        0,
        const prefix0.Reflector(),
        const <int>[-1],
        null,
        null,
        -1,
        {},
        {},
        {
          r'': (bool b) =>
              ({id, title, content, isPinned, userId}) => b
              ? prefix1.NotesListModel(
                  content: content,
                  id: id,
                  isPinned: isPinned,
                  title: title,
                  userId: userId,
                )
              : null,
          r'fromJson': (bool b) =>
              (json) => b ? prefix1.NotesListModel.fromJson(json) : null,
        },
        -1,
        -1,
        const <int>[-1],
        null,
        {
          r'==': 2,
          r'toString': 0,
          r'noSuchMethod': 2,
          r'hashCode': 0,
          r'runtimeType': 0,
          r'toJson': 0,
          r'id': 0,
          r'title': 0,
          r'content': 0,
          r'isPinned': 0,
          r'userId': 0,
        },
      ),
      r.NonGenericClassMirrorImpl(
        r'NotesAddRequestModel',
        r'.NotesAddRequestModel',
        134217735,
        1,
        const prefix0.Reflector(),
        const <int>[-1],
        null,
        null,
        -1,
        {},
        {},
        {
          r'': (bool b) =>
              ({title, content, isPinned = false}) => b
              ? prefix2.NotesAddRequestModel(
                  content: content,
                  isPinned: isPinned,
                  title: title,
                )
              : null,
          r'fromJson': (bool b) =>
              (json) => b ? prefix2.NotesAddRequestModel.fromJson(json) : null,
        },
        -1,
        -1,
        const <int>[-1],
        null,
        {
          r'==': 2,
          r'toString': 0,
          r'noSuchMethod': 2,
          r'hashCode': 0,
          r'runtimeType': 0,
          r'toJson': 0,
          r'title': 0,
          r'content': 0,
          r'isPinned': 0,
        },
      ),
      r.NonGenericClassMirrorImpl(
        r'DeleteResponseModel',
        r'.DeleteResponseModel',
        134217735,
        2,
        const prefix0.Reflector(),
        const <int>[-1],
        null,
        null,
        -1,
        {},
        {},
        {
          r'': (bool b) =>
              ({message}) =>
                  b ? prefix3.DeleteResponseModel(message: message) : null,
          r'fromJson': (bool b) =>
              (json) => b ? prefix3.DeleteResponseModel.fromJson(json) : null,
        },
        -1,
        -1,
        const <int>[-1],
        null,
        {
          r'==': 2,
          r'toString': 0,
          r'noSuchMethod': 2,
          r'hashCode': 0,
          r'runtimeType': 0,
          r'toJson': 0,
          r'message': 0,
        },
      ),
      r.NonGenericClassMirrorImpl(
        r'NotesAddResponseModel',
        r'.NotesAddResponseModel',
        134217735,
        3,
        const prefix0.Reflector(),
        const <int>[-1],
        null,
        null,
        -1,
        {},
        {},
        {
          r'': (bool b) =>
              ({durum, hataMesaji}) => b
              ? prefix4.NotesAddResponseModel(
                  durum: durum,
                  hataMesaji: hataMesaji,
                )
              : null,
          r'fromJson': (bool b) =>
              (json) => b ? prefix4.NotesAddResponseModel.fromJson(json) : null,
        },
        -1,
        -1,
        const <int>[-1],
        null,
        {
          r'==': 2,
          r'toString': 0,
          r'noSuchMethod': 2,
          r'hashCode': 0,
          r'runtimeType': 0,
          r'toJson': 0,
          r'durum': 0,
          r'durum=': 2,
          r'hataMesaji': 0,
          r'hataMesaji=': 2,
        },
      ),
    ],
    null,
    null,
    <Type>[
      prefix1.NotesListModel,
      prefix2.NotesAddRequestModel,
      prefix3.DeleteResponseModel,
      prefix4.NotesAddResponseModel,
    ],
    4,
    {
      r'==': (dynamic instance) =>
          (x) => instance == x,
      r'toString': (dynamic instance) => instance.toString,
      r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
      r'hashCode': (dynamic instance) => instance.hashCode,
      r'runtimeType': (dynamic instance) => instance.runtimeType,
      r'toJson': (dynamic instance) => instance.toJson,
      r'id': (dynamic instance) => instance.id,
      r'title': (dynamic instance) => instance.title,
      r'content': (dynamic instance) => instance.content,
      r'isPinned': (dynamic instance) => instance.isPinned,
      r'userId': (dynamic instance) => instance.userId,
      r'message': (dynamic instance) => instance.message,
      r'durum': (dynamic instance) => instance.durum,
      r'hataMesaji': (dynamic instance) => instance.hataMesaji,
    },
    {
      r'durum=': (dynamic instance, value) => instance.durum = value,
      r'hataMesaji=': (dynamic instance, value) => instance.hataMesaji = value,
    },
    null,
    [
      const [0, 0, null],
      const [
        0,
        0,
        const [#id, #title, #content, #isPinned, #userId],
      ],
      const [1, 0, null],
      const [
        0,
        0,
        const [#message],
      ],
      const [
        0,
        0,
        const [#durum, #hataMesaji],
      ],
    ],
  ),
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
